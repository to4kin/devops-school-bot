name: "ci-release"

on:
  push:
    tags:
      - "v*"

jobs:
  test:
    runs-on: ubuntu-latest
    container: golang:1.17
    env:
      TEST_TELEGRAM_TOKEN: ${{ secrets.TEST_TELEGRAM_TOKEN }}
      TEST_DATABASE_URL: postgres://postgres/devops_school_test?user=testuser&password=testpassword&sslmode=disable

    services:
      postgres:
        image: postgres:13.4-alpine
        env:
          POSTGRES_DB: devops_school_test
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_HOST_AUTH_METHOD: trust
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2

      - name: Test verbose
        run: make test-verbose
      
      - name: Test coverage
        run: make test-coverage
      
      - name: Test bench
        run: make test-bench
      
      - name: Test race
        run: make test-race
  
  release:
    runs-on: ubuntu-latest
    needs: test
    env:
      DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '1.17'
      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build
        run: make docker-release

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: bin/devops-school-bot
